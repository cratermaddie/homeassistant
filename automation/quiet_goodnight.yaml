- alias: quiet goodnight
  mode: restart
  trigger:
    platform: event
    event_type: tag_scanned
  condition: '{{ "bed-side-tag" in trigger.event.data.tag_id }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.bedroom_ac_fan_low
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.announce_time
    - service: script.update_travel_time_madison
    - service: homeassistant.update_entity
      entity_id: sensor.auto_alarm_time_ts
    - service: script.turn_off_pc
    - service: input_select.select_option
      data:
        entity_id: input_select.ecobee_modes
        option: Sleep
####            - service: media_player.turn_on
####      entity_id: media_player.bedroom_speaker
####    - wait_template: "{{ is_state('media_player.bedroom_speaker', 'idle') }}"
####      timeout: "00:01:00"
####    - service: var.set
####      data:
####        entity_id: var.volume_temp
####        value_template: "{{ state_attr('media_player.bedroom_speaker', 'volume_level') | float | round(2) }}"
####    - service: media_player.volume_set
####      data_template:
####        entity_id: media_player.bedroom_speaker
####        volume_level: 0.5
 ####   - service: script.goodnight_meds
 ####   - wait_template: "{{ is_state('input_boolean.meds_evening','on') }}"
 ####     timeout: "00:05:00"
 ####   - service: script.goodnight_rogaine
 ####  - wait_template: >-
####      {{ is_state('input_boolean.rogaine_status', 'on') }}
####      timeout: "00:05:00"
####    - service: input_boolean.turn_off
####      entity_id: input_boolean.rogaine_status
####    - service: script.goodnight_e
####    - wait_template: "{{ is_state('input_boolean.estrogen_status', 'on') or (not is_state('sensor.active_day_of_week','thursday')) }}"
####      timeout: "00:05:00"
    - service: light.turn_on
      data_template:
        entity_id: light.bedroom_lights
        brightness: >-
          {% if is_state('light.bedroom_lights','on') %}
            26
          {% else %}
            0
          {% endif %}
        rgb_color: [255,43,0]
#    - service: script.goodnight_tomorrow_summary
#    - wait_template: "{{ is_state('media_player.bedroom_speaker', 'playing') }}"
#      timeout: "00:02:00"
#    - wait_template: "{{ is_state('media_player.bedroom_speaker', 'idle') }}"
#      timeout: "00:02:00"
    - service: media_player.turn_on
      entity_id: media_player.bedroom_speaker
    - wait_template: "{{ is_state('media_player.bedroom_speaker', 'idle') }}"
      timeout: "00:01:00"
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.bedroom_speaker
        volume_level: 0.4
    - wait_template: "{{ states.sensor.auto_alarm_time_ts.last_updated.timestamp() > states.script.goodnight.attributes.last_triggered.timestamp() }}"
      timeout: "00:00:02"
    - service: var.set
      data:
        entity_id: var.mode
        value: "sleep"
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.awake
    - service: script.reset_estrogen
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.bedtime
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.staying_up
    - service: light.turn_off
      target:
        entity_id:
          - light.main_lights
    - service: light.turn_off
      target:
        entity_id:
          - light.fairy_lights
    - service: alarm_control_panel.alarm_arm_home
      data:
        entity_id: alarm_control_panel.home_alarm
        code: !secret alarm_code
#    - service: script.turn_off_vanity
    - service: var.set
      data:
        entity_id: var.time_asleep
        value_template: '{{ now().timestamp() | int }}'
    - service: media_player.play_media
      data:
        media_content_id: spotify:episode:3pE4uKFwCzd5TA2A6t4rHr
        media_content_type: music
        source: "Bedroom speaker"
#    - condition: state
#      entity_id: person.armond
#      state: 'not_home'
#    - service: input_select.select_option
#      data:
#        entity_id: input_select.living_room_ac_mode
#        option: 'Off'
#    - service: script.turn_off_tv